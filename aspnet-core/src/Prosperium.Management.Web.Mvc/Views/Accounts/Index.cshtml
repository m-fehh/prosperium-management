<link defer rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
<script defer src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
<script defer src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.pt-BR.min.js"></script>



@using Prosperium.Management.Web.Startup
@{
    ViewData["Title"] = "Minhas contas";
    ViewBag.CurrentPageName = PageNames.Accounts;
}

@section scripts
    {
    <environment names="Development">
        <script src="~/view-resources/Views/Accounts/Index.js" asp-append-version="true"></script>
    </environment>

    <environment names="Staging,Production">
        <script src="~/view-resources/Views/Accounts/Index.min.js" asp-append-version="true"></script>
    </environment>
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<link rel="stylesheet" href="~/css/Accounts/style.css" />

<script src="https://cdn.pluggy.ai/pluggy-connect/v1.3.1/pluggy-connect.js"></script>

<div class="container-fluid">
    <div class="form-container" id="AccountCreate">
        <h2>@ViewData["Title"]</h2>
        <p class="title">Gerencie suas contas de forma simples! Escolha entre cadastrar manualmente ou conecte automaticamente para acompanhar suas transações com praticidade e controle total.</p>

        <div class="row" style="display: flex; flex-wrap: wrap; justify-content: flex-end; align-items: center;">

            <div class="col-12 col-md-6">
                <div class="opcao-btn opcao-selecionada" onclick="marcarOpcao(this, 'ativos')">
                    <input type="radio" value="1" style="display: none;" checked />
                    <div class="opcao">Contas ativas</div>
                </div>

                <div class="opcao-btn" onclick="marcarOpcao(this, 'desativados')">
                    <input type="radio" value="2" style="display: none;" />
                    <div class="opcao">Contas inativas</div>
                </div>
            </div>

            <div class="col-12 col-md-6" style="display: flex; justify-content: space-around; margin-top: 10px; gap: 10px;">
                <a href="@Url.Action("CreateAccount", "Accounts")" class="custom-button" id="bnt-adicionar-conta">
                    <i class="fa fa-plus"></i> &nbsp; Adicionar conta manualmente
                </a>

                <div class="custom-button" id="bnt-adicionar-conta-pluggy">
                    <i class="fa fa-plus"></i> &nbsp; Adicionar conta automaticamente
                </div>
            </div>
        </div>



        <div id="card-container" style="padding: 40px 10px;"></div>
    </div>
</div>

<script>
    function marcarOpcao(elemento, valor) {
        var botoes = document.querySelectorAll('.opcao-btn');
        botoes.forEach(function (botao) {
            botao.classList.remove('opcao-selecionada');
        });

        elemento.classList.add('opcao-selecionada');

        var inputRadio = elemento.querySelector('input[type="radio"]');
        inputRadio.checked = true;

        // var textActive = (isActive) ? "Ativa" : "Inativa";
        var isActive = (valor == "ativos") ? true : false;

        UpdateCardValues(isActive);
    }

    $(document).ready(function () {
        UpdateCardValues(true);
    });

    var isSaldoVisible = false;

    function toggleVisibility(balance, saldoId, iconId) {
        isSaldoVisible = !isSaldoVisible;
        updateSaldoVisibility(balance, saldoId);

        // Altera o ícone do olho com base no estado de visibilidade
        var eyeIcon = document.getElementById(iconId);

        if (eyeIcon) {
            if (!isSaldoVisible) {
                eyeIcon.className = 'fas fa-eye';
            } else {
                eyeIcon.className = 'fas fa-eye-slash';
            }
        } else {
            console.error("Icon not found:", iconId);
        }
    }

    function updateSaldoVisibility(balance, saldoId) {
        var saldoElement = $('#' + saldoId);
        if (isSaldoVisible) {
            saldoElement.text(balance);
        } else {
            saldoElement.text("R$ ••••");
        }
    }

    async function UpdateCardValues(isActive) {
        var cardContainer = $('#card-container');
        try {
            var data = await $.ajax({
                url: '/App/Accounts/GetAccounts',
                type: 'GET',
                data: { isActive: isActive },
                dataType: 'json',
            });

            $('#card-container').empty();
            var textActive = (!isActive) ? "Ativar" : "Desativar";
            var cardHtml = '<div class="row">';

            if (data.result.length > 0) {
                for (let index = 0; index < data.result.length; index++) {
                    try {
                        var account = data.result[index];

                        var typeAccount = (account.origin == 2) ? "Automática" : "Manual";

                        cardHtml +=
                            `
                                        <div class="col-12 col-md-6">
                                        <div class="card">
                                            <div class="card-content" style="cursor:pointer;">
                                                <div class="text-content">
                                                         <div class="row" style="display: flex; justify-content:flex-start; align-items: center; width: 90%; padding: 0 10px;">
                                                            <div class="col-11" style="display: flex; align-items: center;">
                                                            <h3 style="font-size: 15px; font-weight: bold; margin-left: -15px;">${account.accountNickname}</h3>
                                                            <p class="saldo-label" style="padding-left: 15px; font-size: 12px; color: #999;">${getAccountTypeName(account.accountType)} - ${typeAccount}</p>
                                                        </div>
                                                        <div class="col-1">
                                                            <div class="icon" style="display: flex; gap: 10px;">
                                                                <img src="/img/banks/${account.bank.imagePath}" style="width: 30px;" style="border-radius: 10px;" />
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <hr class="divider">
                                                        <div class="row" style="display: flex; justify-content:flex-start; align-items: center; width: 90%; padding: 0 10px;">
                                                        <div class="col-1 d-flex">
                                                            <button class="btn-toggle-visibility" onclick="toggleVisibility('${formatCurrency(account.balanceAvailable)}', 'saldo_${account.id}', 'eyeIcon_${account.id}')" style="border: none; background: none;margin-top: 10px;">
                                                                <i id="eyeIcon_${account.id}" class="fas fa-eye" style="color: #333; font-size: 18px;"></i>
                                                            </button>
                                                        </div>
                                                            <div class="col-10" style="padding-left: 20px;">
                                                            <p class="saldo-label" style="display: flex; padding: 0 5px;">${(account.accountType !== 7) ? "Saldo atual:" : "Fatura atual:"}</p>
                                                            <p class="saldo-valor" id="saldo_${account.id}" style="display: flex; padding: 0 5px;">${isSaldoVisible ? formatCurrency(account.balanceAvailable) : 'R$ ••••'}</p>
                                                        </div>
                                                     <div class="col-1 d-flex align-items-center" style="padding-left: 15px;">
                                                     <div class="dropdown" style="margin-top: 10px;">
                                                                <div id="menuIcon" class="ml-auto dropdown-toggle" data-toggle="dropdown" style="display: flex; align-items: center;">
                                                                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
                                                                        <path d="M2 11h12a1 1 0 0 1 0 2H2a1 1 0 0 1 0-2zm0-5h12a1 1 0 0 1 0 2H2a1 1 0 0 1 0-2zm0-5h12a1 1 0 0 1 0 2H2a1 1 0 0 1 0-2z" />
                                                                    </svg>
                                                                </div>
                                                                <div class="dropdown-menu dropdown-menu-right">
                                                                    <button class="dropdown-item" data-item-id="${account.pluggyItemId}" data-conta-id="${account.id}" id="bntAtualizarConta" style="${account.origin != 2 ? 'display: none;' : ''}">Atualizar</button>
                                                                    <button class="dropdown-item" data-conta-id="${account.id}" data-status-conta="${isActive}" id="bntChangeStatus">${textActive}</button>
                                                                    <button class="dropdown-item" data-conta-id="${account.id}" data-conta-nome="${account.accountNickname}" id="bntExcluirConta">Excluir definitivamente</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                            `;

                        if (index % 2 !== 0 || index === data.result.length - 1) {
                            cardHtml += '</div>';
                            if (index !== data.result.length - 1) {
                                cardHtml += '<div class="row">';
                            }
                        }
                    } catch (error) {
                        console.error('Erro ao obter balanço:', error);
                    }
                }
                cardContainer.append(cardHtml);
            } else {
                var textActive = (isActive) ? "ativa" : "inativa";

                var emptyCardHtml = `
                            <div class="row justify-content-center align-items-center" style="padding-bottom: 30px;">
                                <div class="col-md-10">
                                    <div class="card text-center" style="height: 100%; padding: 30px 0;">
                                        <h3 style="font-size: 18px; font-weight: bold;">Você não possui uma conta ${textActive} associada ao seu perfil.</h3>`;


                emptyCardHtml += `</div> </div > </div>`;
                cardContainer.append(emptyCardHtml);
            }
        } catch (error) {
            console.error('Erro na requisição:', error);
        }
    }

    function formatCurrency(value) {
        const formattedValue = value.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        return value >= 0 ? `R$ ${formattedValue}` : `- R$ ${formattedValue.substring(1)}`;
    }

    function getAccountTypeName(accountType) {
        switch (accountType) {
            case 1:
                return 'Corrente';
            case 2:
                return 'Poupança';
            case 3:
                return 'Investimento';
            case 4:
                return 'Outros';
            case 5:
                return 'Indefinido';
            case 6:
                return 'Benefícios';
            case 7:
                return 'Cartão de crédito';
            default:
                return 'Desconhecido';
        }
    }

</script>


